//////////////////////////////////////////////////////////////////////////////
version="version nforder.lib 0.1.0.0 Jul_2014 "
category="Numbertheory";
info="
LIBRARY:  nforder.lib     
AUTHOR:                  

NOTE: 


PROCEDURES:
  EquationOrder              returns the equation order defined by f which should be irreducible,hence ZZ[t]/(f)


";

// LIB "nforder.so"

///////////////////////////////////////////////////////////////////////////////



proc EquationOrder(poly f)
"USAGE: EquationOrder(poly f);
RETURN:  the equation order defined by f which should be irreducible,hence ZZ[t]/(f)
"
{
  "Start EquationOrder";
  list l, B;
  ideal I = std(f);
  poly g;
  bigintmat b[deg(f)][deg(f)], c;
  int i, j, k;
  for(i=0; i<deg(f); i++) {
    c = b;
    for(j=0; j<deg(f); j++) {
      g = reduce(x^i*x^j, I);
      for (k=1; k<=size(g); k++) {
        c[deg(g[k])+1, j+1] = bigint(leadcoef(g[k]));
      }
    }
    l[i+1] = c;
  }
  return(nfOrder(l));
}
example
{ "EXAMPLE:";
    LIB "nforder.so";
    cring a;

    ring r=(ZZ),x,dp;
    poly f = x^3-13*x+27*169;
    a = EquationOrder(f);
    pMaximalOrder(a, 5*13);
}



proc myGCD(poly f, poly g)
{
  "Start myGCD";
  return(gcd(f,g));
}

proc GetSquarefree(poly f)
"USAGE: GetSquarefree(poly f);
RETURN:  the squarefree part of univariate polynomials or zero
"
{
  int i = univariate(f);
  if(i==-1){
    return(poly(0));
  }
  poly g = diff(f,var(i));
  poly h = gcd(f,g);
  return(f/h);
}
example
{ "EXAMPLE:";
    LIB "nforder.so";
    ring r=(ZZ),x,dp;
    poly f = (x2+2)^2*(x2+3);
    GetSquarefree(poly f);
}
